package sanjeevni.gui;

import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import sanjeevni.utility.PasswordEncryption;
import sanjeevni.utility.UserProfile;
import sanjeevniapp.dao.UserDao;
import sanjeevniapp.pojo.UserPojo;

public class LoginFrame extends javax.swing.JFrame {

    private String password;
    private String loginid;

    public LoginFrame() {

        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSeparator3 = new javax.swing.JSeparator();
        panelfront = new javax.swing.JPanel();
        txtloginid = new javax.swing.JTextField();
        pfpassword = new javax.swing.JPasswordField();
        rbadmin = new javax.swing.JRadioButton();
        rbreceptionist = new javax.swing.JRadioButton();
        rbdoctor = new javax.swing.JRadioButton();
        btnlogin = new javax.swing.JButton();
        btnquit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelfront.setBackground(new java.awt.Color(237, 251, 255));
        panelfront.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelfront.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtloginid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtloginidActionPerformed(evt);
            }
        });
        panelfront.add(txtloginid, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 39, 244, -1));

        pfpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfpasswordActionPerformed(evt);
            }
        });
        panelfront.add(pfpassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 39, 215, -1));

        buttonGroup1.add(rbadmin);
        rbadmin.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        rbadmin.setText("Admin");
        rbadmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbadminActionPerformed(evt);
            }
        });
        panelfront.add(rbadmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 92, -1, -1));

        buttonGroup1.add(rbreceptionist);
        rbreceptionist.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        rbreceptionist.setText("Receptionist");
        rbreceptionist.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rbreceptionist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbreceptionistActionPerformed(evt);
            }
        });
        panelfront.add(rbreceptionist, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 97, -1, -1));

        buttonGroup1.add(rbdoctor);
        rbdoctor.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        rbdoctor.setText("Doctor");
        rbdoctor.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        rbdoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbdoctorActionPerformed(evt);
            }
        });
        panelfront.add(rbdoctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(607, 97, -1, -1));

        btnlogin.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnlogin.setText("Login");
        btnlogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloginActionPerformed(evt);
            }
        });
        panelfront.add(btnlogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(125, 140, 207, -1));

        btnquit.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        btnquit.setText("Quit");
        btnquit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnquitActionPerformed(evt);
            }
        });
        panelfront.add(btnquit, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 140, 170, -1));

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel1.setText("Password");
        panelfront.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(422, 12, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel2.setText("Login ID");
        panelfront.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 12, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 0, 14)); // NOI18N
        jLabel3.setText("User Type");
        panelfront.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 106, 25));
        panelfront.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 740, 20));
        panelfront.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 740, 20));

        getContentPane().add(panelfront, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 290, 770, 180));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel5.setText("Sanjeevni Application ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 420, 40));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 740, 40));

        jSeparator5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 460, 50));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sanjeevni/images/HomePageBG1.jpg"))); // NOI18N
        jLabel4.setText("3w");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-100, -100, 870, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbadminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbadminActionPerformed

    }//GEN-LAST:event_rbadminActionPerformed

    private void txtloginidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtloginidActionPerformed

    }//GEN-LAST:event_txtloginidActionPerformed

    private void pfpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfpasswordActionPerformed

    }//GEN-LAST:event_pfpasswordActionPerformed

    private void rbreceptionistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbreceptionistActionPerformed

    }//GEN-LAST:event_rbreceptionistActionPerformed

    private void rbdoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbdoctorActionPerformed

    }//GEN-LAST:event_rbdoctorActionPerformed

    private void btnloginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloginActionPerformed
        boolean isValidInput = validateInputs();
        if (isValidInput == false) {
            JOptionPane.showMessageDialog(null, "Please input id and password");
            return;
        }
        String usertype = getUserType();               //usertype me admin/dr/recep ye aake store hojayega  whichever is selected
        if (usertype == null) {
            JOptionPane.showMessageDialog(null, "Please select type");
            return;
        }
        
        try{
                UserPojo user=new UserPojo();
                user.setLogin_id(loginid);               //user se liya hua input setter call krke DB me daal diya 
                String pwd= new String(PasswordEncryption.getEncryptedPassword(password));           //pwd string me encrypted form wala password store kara diya 
                      // PasswordEncryption is a class, getencryptePassword is the method which has code for encryption(base64) 
                
                   user.setPassword(pwd);
                user.setUser_type(usertype);
                String username= UserDao.validateUser(user);              //yahan pe DB me se name fetch karna hai isliye, Dao se check karwa ke pojo object pass kiya hai       
                 if(username!=null)
                 {
                     JOptionPane.showMessageDialog(null,"Welcome "+username,"Login success!",JOptionPane.INFORMATION_MESSAGE);
                      UserProfile.setUserName(username);     //set all received data in userprofile class
                     UserProfile.setUserType(usertype);           // this data will be used from there as and when needed
                      UserProfile.setUserId(loginid);
                      JFrame optionsframe= null;              //jframe ka reference bana liya 
                      if(usertype.equalsIgnoreCase("admin"))             //ab jo bhi radio button select hoga uske according next page open hoga after login
                      {
                          optionsframe= new AdminOptionsFrame(); 
                      }
                      else if(usertype.equalsIgnoreCase("doctor"))
                      {
                          optionsframe=new DoctorOptionsFrame();
                 }
                      else 
                      {
                          optionsframe= new RecepOptions();
                      }
                      optionsframe.setVisible(true);
                this.dispose();
                return;
        }
                 JOptionPane.showMessageDialog(null,"Invalid credentials!","Login denied!",JOptionPane.ERROR_MESSAGE);
        }

        catch(SQLException ex){
            JOptionPane.showMessageDialog(null,"Error In DB"+ex.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnloginActionPerformed

    private void btnquitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnquitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnquitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnlogin;
    private javax.swing.JButton btnquit;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JPanel panelfront;
    private javax.swing.JPasswordField pfpassword;
    private javax.swing.JRadioButton rbadmin;
    private javax.swing.JRadioButton rbdoctor;
    private javax.swing.JRadioButton rbreceptionist;
    private javax.swing.JTextField txtloginid;
    // End of variables declaration//GEN-END:variables

    private boolean validateInputs() {
        loginid = txtloginid.getText().trim();
        char[] pwd = pfpassword.getPassword();         //passwords are stored in char[] for security
        //storing in string takes it to pool from where hacker might access it as it stays in pool untill the application is closed & does not get destroyed. 
        if (loginid.isEmpty() || pwd.length == 0) {
            return false;
        } else {
            password = new String(pwd);                                //encrypted wala password wapas string me dalwa ke store karwa liya
            return true;
        }
    }

    private String getUserType() {
        if (rbadmin.isSelected()) 
            return rbadmin.getText().toUpperCase();
        
        else if (rbdoctor.isSelected()) 
            return rbdoctor.getText().toUpperCase();
        
        else if (rbreceptionist.isSelected()) 
            return rbreceptionist.getText().toUpperCase();
        
        return null;        
    }    
} 
